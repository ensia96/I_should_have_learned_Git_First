WSGI -> Web Server Gateway Interface : 웹서버 구동 환경
ASGI -> Asynchronous Server Gateway Interface : 비동기적 서버 구동 환경

기본적으로, runserver 명령은 내부 IP 의 8000 번 포트로 서버구동
 -> 서버의 포트를 변경하고 싶다면, 커맨드라인에서 인수를 전달

admin.site.urls 를 제외하고, 다른 URL 패턴을 포함할 때마다 항상 include()를 사용해야 합니다.


path() 함수에는
2개의 필수인자인 route 와 view,
2개의 선택인자로 kwargs 와 name
까지 모두 4개의 인수가 전달 되었습니다.
이 시점에서, 이 인수들이 무엇인지 살펴보는 것은 의미가 있습니다.


mysite/urls.py

route
: URL 패턴을 가진 문자열
/ 요청이 처리될 때, Django 는

urlpatterns 의 첫 번째 패턴부터 일치하는 패턴을 찾을 때 까지
요청된 URL 을 각 패턴과 리스트의 순서대로 비교함.

GET 이나 POST 방식의 매개 변수들, 혹은 도메인 이름을 검색하지 않습니다.
예를 들어,
https://www.example.com/myapp/ 이 요청된 경우, URLconf 는 오직 myapp/ 부분만 바라 봅니다.
https://www.example.com/myapp/?page=3, 같은 요청에도, URLconf 는 역시 myapp/ 부분만 신경씁니다.

view
: Django 에서 일치하는 패턴을 찾으면,
HttpRequest 객체를 첫번째 인자로 하고,
경로로 부터 '캡처된' 값을 키워드 인수로하여 특정한 view 함수를 호출

kwargs
: 임의의 kwargs 목표한 view 에 dictionary 로 전달

name
: URL naming 을 하면, 어디에서나 ( 템플릿을 포함한 ) 명확하게 참조할 수 있음.
단 하나의 파일만 수정해도 project 내의 모든 URL 패턴을 바꿀 수 있음.


mysite/settings.py

TIME_ZONE
: 기준 시간대 설정

 INSTALLED_APPS
: 현재 Django 인스턴스에서 활성화된 모든 Django 어플리케이션들의 이름이 담겨 있습니다.
다수의 프로젝트에서 사용가능, 패키징하여 배포 가능

	django.contrib.admin - 관리용 사이트
	django.contrib.auth - 인증 시스템
	django.contrib.contenttypes - 컨텐츠 타입을 위한 프레임워크
	django.contrib.sessions - 세션 프레임워크
	django.contrib.messages - 메세징 프레임워크
	django.contrib.staticfiles - 정적 파일담당 프레임워크