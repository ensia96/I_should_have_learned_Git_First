개꿀팁
	한방에 mysql 진입?! ( 복붙하세요 )
		sudo /usr/local/mysql/bin/mysql -uroot -p

종류
	Relational DB 
		My SQL ( 일반적 )
		Oracle ( 관공서, 기업 )
		PostgreSQL
	Document store 
		MongoDB
	Wide column store
		Cassandra

구조
	DB Server 안에
		Database ( schema / ! ) 안에
			Table ( 표 / ~ ) 안에
				Column ( 열, key / $ )
					Row ( 행, value / % )

MySql

	mysql general_log enable : mysql server에 도착하는 명령 로그생성

데이터 관련 명령

	생성
		: create !~ 이름

	삭제
		: drop ~ 이름

	목록보기
		: show !~s

	활성화
		: use ~ 이름

	이름바꾸기
		: remame !~ 이름 to 이름

사용자 / 권한 관련 명령

	사용자설정
		: grant 권한 on 대상 to 아이디@호스트 ( ip 혹은 % ) 비밀번호

	권한보기
		: show grants

	권한제거
		: revoke 권한 on 대상 from 사용자

	사용자 삭제
		: drop user 사용자

Input
	Create
		Table 생성 ( key 생성 )
			: create ~ 이름 ( )
				( ) 안에 key 지정
					- $ 이름 , 데이터 타입 , NULL타입
						AUTO_INCREMENT 로 자동증가 항목도 설정 가능
			- 주 key지정 ( 가장 강한 색인이 적용됨 )
				: PRIMARY KEY ( $ )
		Value 생성
			: insert into 입력 ( ~ ) ( $ ) values ( ‘ % ’ )

	Update
		수정
			: update ~ set key = ‘ val1 ’ where $ = ㅁ
				key 의 내용을 val1 로 / $ 값이 ㅁ 인 자료에 대해
		Column 추가
			: alter ~ 이름 add column $ @
			이름 테이블을 수정한다 / key를 추가한다 / $ = key name / @ = key datatype

	Delete
		삭제
			: delete from ~ where $=‘ㅁ’
				삭제한다 / $ 값이 ㅁ 인 자료에 대해

			: truncate ~ 이름
				이름 테이블 내용 비우기

Output
	내용확인
		select $							-> 원하는 column 지정
		from ~							-> column 을 꺼내올 table 지정
		where $=‘ㅁ’						-> $ 값이 ㅁ 인 자료에 대해
		order by desc ( 역순 ) / asc ( 정순 )		-> 정순 혹은 역순으로 정렬
		limit ‘갯수’							-> 갯수만큼만 출력

			where 속성에서 and , or , not 을 이용해 여러조건을 설정할 수 있다.
			group by $ 은 $ 기준으로 정렬한다. ( where 와 order by 사이에 들어가는 속성 )
			limit 속성은 offset, row 를 사용해 페이징 기능을 할 수 있다.

	table 연동해서 보기
		select ~ . $						-> 원하는 table 의 원하는 column 지정
		from ~							-> column 을 꺼내올 table 지정
		left join ~1						-> 위의 내용을 왼쪽으로 , 오른쪽에는 다른 table 출력
		on ~ . $ = ~1 . $					-> ~ 의 $ 와 ~1 의 $ 값이 일치하는 부분에서

			join 의 방식은 outter, inner 두 가지가 있는데,
			이때 데이터가 일치하지 않으면
			outter join ( left, right ) 은 null 로 출력, inner join 은 출력하지 않는다.

	기타
		색인 ( index key )
			primary : 중복없는값
			unique : 중복없는 유일값
			fulltext : 긴값에서
			foreign : ??? 공부해야됨;;

		치환출력
			AS 를 사용하면 왼쪽의 내용을 오른쪽의 내용으로 치환해준다
				예 ) ~ as a 로 구문을 간단히 할 수도 있다.