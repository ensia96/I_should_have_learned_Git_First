헉헉....

set 는 동일한 값을 여러번 삽입 불가능하고 해쉬값을 기반으로 저장하기 때문에 look up 이 굉장히 빠른 자료구조라고 배웠습니다.
내부적으로 해시 값을 사용해서 빠르게 데이터를 저장하고 가져올 수 있기 때문 인데요. 해시 값을  구해주는 함수를 해시 함수라고 하는데 다른 키에 대해서 같은 해시값이 나오는 경우를 충돌 이라고 합니다.
우리는 이런 충돌을 해결하여 중복된 값을 저장하지 않도록 해시 테이블을 사용하여 주어진 MySet클래스의 add 메소드를 간단하게 구현해 보겠습니다.
여기서는 가장 간단한 방법인 선형 탐사기법을 사용하여 충돌을 방지하고 중복된 데이터를 저장하지 않도록 구현해 보겠습니다.
선형탐사(Linear Probing) 특정 버킷에서 충돌이 발생하면 인덱스를 1씩 증가시켜 비어있는 버킷을 찾는 방법입니다.
다음 그림은 wecode를 sha1 해시 함수와 숫자만 뽑아내서 나눗셈법으로 해시버킷6에 삽입한 이후, weplay 를 해시할때 버킷6에서 충돌이 발생한 상황입니다. 충돌이 발생하면 고정적으로 인덱스를 1씩 증가시켜 비어있는 버킷을 찾아내는 것을 선형 탐사라고 합니다.