IP address
	Internet Protocol Address
		Client IP
		Router IP
		Public IP

Router
	WAN과 LAN의 교환원
	하나의 IP주소를 여러컴퓨터가 나눠 사용

	WAN
		Wide Area Network
		Public IP
		누구나

	LAN
		Local Area Network
		Private IP
		직접 X

NAT
	Network Address Translation
		어떤 클라이언트의 요청인지 기록, 공인IP의 요청으로 변환
		네트워크에서 공인IP로 응답받은 뒤, 요청한 클라이언트로 응답

Port
	0~65535
		0 ~ 1023 port = Well-Known Port ( 예약된 포트 )
			22 = SSH
			80 = http ( 웹 전용 )

	listening : 연결됨 / 반응을 하기위해 명령을 듣고있다

	서버 2개를 구동하려면
		서버 1 ( 80 사용 중 ) / 주소 : 80 -> 80 port 연결
		서버 2 ( 다른 port ) / 주소 : 8080 -> 8080 port 연결

Port fowarding
	router 안내자 역할
		예 )
		외부포트 8081 -> 클라이언트1 내부포트 80
		외부포트 8080 -> 클라이언트2 내부포트 80

IP의 종류
	Dynamic IP
		유동 IP / 돌려막기 방식
	Static IP
		고정 IP / 독점사용 가능

DNS
 - Domain name System

	DNS Server
		도메인 이름들이 저장되어있는 서버

	Host
		네트워크에 연결되어있는 장치

hosts 파일을 수정하여 호스트에 이름을 부여할 수 있다.

클라이언트는 DHCP 를 통해 DNS Server 에서 값을  가져온다.

DNS 정보는 터미널의 dig와 nslookup을 통해서 확인할 수 있다.

github 설정에서 github pages 항목에서 도메인 유도가 가능하다

url 에는 각각 DNS Server 가 있음
	ex . 	ample . com	.
	^	   ^		^	^
	sub 	second   top	root
		 level      level
	클라이언트가 사이트에 접속하기 위해 이루어지는 일들
		클라이언트가 root DNS server에 질의 -> top level DNS server 호출 ->
		top level DNS server 응답 -> second level DNS server 호출 ->
		second level DNS server 응답 -> sub level DNS server 에서 IP 값을 받음

DNS Server 의 구조 ( 등록자가 등록대행자에게, 등록대행자가 등록소에, 등록소가 ICANN 에 )
	Registant 등록자
		|
	Registrar 등록대행자 / 개인 server ( authoritative name server )
			기억하는 것 : IP Adress
		|
	Registry 등록소 : top level DNS
			기억하는 것 : DNS server
		|
	ICANN 관리자 ( 비영리단체 ) : root name server
			기억하는 것 : top level DNS server

DNS record
	a type b : a 값을 b에 할당
		도메인 주소 A IP Adress
		도메인 주소 NS DNS server
		또다른 주소 CNAME 도메인 주소